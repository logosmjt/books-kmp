[versions]
agp = "8.10.0"
componentsResources = "1.8.0"
kotlin = "2.1.20"
compose = "1.8.0"
activityCompose = "1.8.0"
compose-material3 = "1.3.2"
kotlinxCoroutinesCore = "1.10.1"
materialIconsCore = "1.7.3"
multiplatformSettings = "1.3.0"
ktorClient = "3.1.1"
kotlinxDatetime = "0.6.2"
material3WindowSizeClassMultiplatform = "0.5.0"
koin = "4.0.0"
sqlDelight = "2.0.1"
kamelImage = "1.0.5"
navigation = "2.9.0-beta01"
core = "1.13.1"
turbine = "1.2.0"
spotless = "7.0.3"
androidxLifecycle = "2.8.4"
androidxTestJunit = "1.2.1"

[libraries]
components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "componentsResources" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestJunit" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesCore" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
material3-window-size-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClient" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktorClient" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClient" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClient" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClient" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClient" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClient" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktorClient" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClient" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }

material-icons-core = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "materialIconsCore" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

sql-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sql-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sql-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sql-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sql-web-worker-driver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }

compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "compose" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }

kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }
kamel-decoder-animated-image = { module = "media.kamel:kamel-decoder-animated-image", version.ref = "kamelImage" }
kamel-decoder-image-bitmap = { module = "media.kamel:kamel-decoder-image-bitmap", version.ref = "kamelImage" }
kamel-decoder-image-vector = { module = "media.kamel:kamel-decoder-image-vector", version.ref = "kamelImage" }
kamel-decoder-svg-std = { module = "media.kamel:kamel-decoder-svg-std", version.ref = "kamelImage" }
kamel-decoder-image-bitmap-resizing = { module = "media.kamel:kamel-decoder-image-bitmap-resizing", version.ref = "kamelImage" }
kamel-fetcher-resources-android = { module = "media.kamel:kamel-fetcher-resources-android", version.ref = "kamelImage" }
kamel-mapper-resources-id-android = { module = "media.kamel:kamel-mapper-resources-id-android", version.ref = "kamelImage" }

androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
sql-delight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[bundles]
ktor-common = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-serialization",
    "ktor-client-contentNegotiation"]
kamel-common = [
    "kamel-image",
    "kamel-decoder-animated-image",
    "kamel-decoder-image-bitmap",
    "kamel-decoder-image-vector",
    "kamel-decoder-svg-std"
]
kamel-android = [
    "kamel-decoder-image-bitmap-resizing",
    "kamel-fetcher-resources-android",
    "kamel-mapper-resources-id-android"
]

shared-commonTest = [
    "kotlin-test",
    "multiplatformSettings-test",
    "koin-test",
    "coroutines-test",
    "ktor-client-mock",
    "turbine",
]
shared-androidTest = [
    "androidx-test-junit",
    "coroutines-test",
    "sql-jvm-driver"
]